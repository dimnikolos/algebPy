-- Instruction Memory Initialization File
-- Instruction Format:
-- R-Type: <6-bit Opcode>,<5-bit rs>,<5-bit rt>,<5-bit rd>,<5-bit shamt>,<6-bit funct>
-- bits (31-26) (25-21) (20-16) (15-11) (10-6) (5-0)
--
-- I-Type: <6-bit Opcode>,<5-bit rs>,<5-bit rt>,<16-bit Address>
-- bits (31-26) (25-21) (20-16) (15-0)
--File format:
-- Hex Address 3 hex nibbles (12 bits) : bit31 ...... bit0;
WIDTH=32;
DEPTH=1024;

ADDRESS_RADIX=HEX;
DATA_RADIX=BIN;
CONTENT BEGIN
--Hex Address : bit31..........................bit0;
-- | | |
00 : 10001100000000000000000000000000;
--   |____||___||___||______________|
--   | | | |
--   lw, rs=0, rt=0, offset=0
-- This is the first instruction that get's executed. This is a lw instructioni. It loads r0 with data from data memory location 0. Data memory location 0 is preloaded with 0 , (see DRAM.mif).
--
01 : 10001100000000010000000000000001;
--    |____||___||___||______________|
--    | | | |
--    lw, rs=0, rt=1, offset=1

-- This is a lw instructioni. It loads r1 with data from data memory location 1. Data memory location 1 is preloaded with 0, (see DRAM.mif).
--
--
02 : 10001100000000100000000000000010;
--    |____||___||___||______________|
--    | | | |
--    lw, rs=0, rt=2, offset=8
-- This is a lw instructioni. It loads r2 with data from data memory location 2. Data memory location 2 is preloaded with 1, (see DRAM.mif).
03 : 10001100000000110000000000001100;
--    |____||___||___||______________|
--    | | | |
--    lw, rs=0, rt=3, offset=12
-- This is a lw instructioni. It loads r3 with data from data memory location 8. Data memory location 8 is preloaded with 10, (see DRAM.mif).
04 : 10001100000001000000000000010000;
--    |____||___||___||______________|
--    | | | |
--    lw, rs=0, rt=4, offset=16
-- This is a lw instructioni. It loads r4 with data from data memory location 8. Data memory location 8 is preloaded with 15, (see DRAM.mif).
--
05 : 00010000100000000000000000000000;
--    |____||___||___||______________|
--    | | | |
--    beq,rs=4,rt=0, offset exit loop(addr:008)
06 : 00000000010000000000000000100000;
--    |____||___||___||___||___||____|
--    | | | | | |
--    R-type,rs=2,rt=0,rd=0,---,f=add
-- Add instructions (r-type, opcode=0, funct=100000)
-- add => rd = rs + rt

-- Therefore => r0 = r2 + r0
07 : 00001000000000000000000000000101;
--    |____||________________________|
--    | |
--    jump, Target address:address(005)
-- Decrementing to 10
08 : 00010000011000000000000000000000;
--    |____||___||___||______________|
--    | | | |
--    beq,rs=3,rt=0, offset to exit loop(addr:00B)
09 : 00000000010000010010100000100010;
--    |____||___||___||___||___||____|
--    | | | | | |
--    R-type,rs=2,rt=1,rd=5,---,f=sub
-- sub instructions (r-type, opcode=0, funct=100010)
-- add => rd = rs - rt
-- Therefore => r4 = r1 - r2
0A : 00001000000000000000000000001000;
--    |____||________________________|
--    | |
--    jump, Target address:address(addr:008)
-- Reloading when r0 == 10
0B : 10001100000000000000000000000000;
--    |____||___||___||______________|
--    | | | |
--    lw, rs=0, rt=0, offset=0
-- This is a lw instructioni. It loads r0 with data from data memory location 4. Data memory location 0 is preloaded with 0, (see DRAM.mif).
0C : 00001000000000000000000000000101;
--    |____||________________________|
--    | |
--    jump, Target address:address(addr:005)
END;